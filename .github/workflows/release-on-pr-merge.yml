name: Release on PR Merge

on:
  pull_request:
    types:
      - closed
    branches:
      - main
  workflow_dispatch:
    inputs:
      label:
        description: "Release type"
        required: true
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  release:
    if: (github.event_name == 'pull_request' && github.event.pull_request.merged == true && (contains(github.event.pull_request.labels.*.name, 'major') || contains(github.event.pull_request.labels.*.name, 'minor') || contains(github.event.pull_request.labels.*.name, 'patch'))) || (github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Fetch all history and tags

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get latest tag
        id: get_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            label="${{ github.event.inputs.label }}"
          else
            label=$(echo "${{ toJson(github.event.pull_request.labels.*.name) }}" | grep -oE 'major|minor|patch' | head -n1)
          fi
          latest_tag=${{ steps.get_tag.outputs.latest_tag }}
          version_no_v="${latest_tag#v}"
          IFS='.' read -r major minor patch <<< "$version_no_v"
          if [ "$label" = "major" ]; then
            major=$((major+1)); minor=0; patch=0
          elif [ "$label" = "minor" ]; then
            minor=$((minor+1)); patch=0
          else
            patch=$((patch+1))
          fi
          new_tag="v$major.$minor.$patch"
          echo $new_tag
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.bump_version.outputs.new_tag }}
          name: Release ${{ steps.bump_version.outputs.new_tag }}
          body: "Automated release triggered by PR #${{ github.event.pull_request.number }} with label ${{ steps.bump_version.outputs.label }}."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
